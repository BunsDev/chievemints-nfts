{"version":3,"file":"856.bundle.js","mappings":"sKAGIA,E,MAA0B,GAA4B,KAE1DA,EAAwBC,KAAK,CAACC,EAAOC,GAAI,mYAAoY,GAAG,CAAC,QAAU,EAAE,QAAU,CAAC,mCAAmC,MAAQ,GAAG,SAAW,sOAAsO,eAAiB,CAAC,iVAAiV,WAAa,MAEvlC,S,wECuGO,MAAMC,UAAoBC,MAC/BC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,KAAO,aACd,E,6NCvGEC,EAAU,CAAC,EAEfA,EAAQC,kBAAoB,IAC5BD,EAAQE,cAAgB,IAElBF,EAAQG,OAAS,SAAc,KAAM,QAE3CH,EAAQI,OAAS,IACjBJ,EAAQK,mBAAqB,IAEhB,IAAI,IAASL,GAKJ,KAAW,YAAiB,WAA3C,MC0SP,EA/Sa,KACX,MAAOM,EAAQC,IAAa,IAAAC,UAAoC,KACzDC,IAAS,WACTC,EAAOC,IAAY,IAAAH,UAASI,OAAOH,EAAMI,IAAI,UAAY,cACzDC,EAAQC,IAAa,IAAAP,UAASI,OAAOH,EAAMI,IAAI,WAAa,eAC5DG,EAAeC,IACpB,IAAAT,UAAiC,SAAxBC,EAAMI,IAAI,WAEfK,EAAUT,EAAMI,IAAI,YAAc,cACjCM,EAAaC,IAClB,IAAAZ,WAAiC,QAAWU,IAExCG,GAAW,WACX,WAAEC,EAAU,YAAEC,IAAgB,UAE9BC,GAAW,IAAAC,cACf,CAACC,EAAaC,KACZ,IAAIC,EAWJ,OATArB,GAAWsB,IACTD,EAAQ,IAAKC,EAAKH,MAASC,GACpB,IACFE,EAAKC,MAAM,EAAGJ,MACdK,MAAMC,KAAK,CAAEC,OAAQP,EAAMG,EAAKI,SAAU,KAAM,CAAG,KACtDL,KACGC,EAAKC,MAAMJ,EAAM,OAGjBE,CAAK,GAEd,CAACrB,KAEI2B,EAAWC,IAAgB,IAAA3B,UAAS,OACpC4B,EAAaC,IAAkB,IAAA7B,UAAwB,OACvD8B,EAAgBC,IAAqB,IAAA/B,UAAwB,OAC7DgC,EAAYC,IAAiB,IAAAjC,UAAwB,OACrDkC,EAAeC,IACpB,IAAAnC,UAAwB,OAG1B,IAAAoC,YAAU,KACR,MAAMC,EAAS,CAAC,EACb1B,GAAac,OAAS,EACvBa,OAAOC,OAAOF,EAAQ,CACpB3B,QAASC,EAAY6B,aAGvBF,OAAOG,QAAQ,CAAEvC,QAAOI,SAAQoC,OAAQlC,IAAiBmC,SACvD,EAAEC,EAAKC,MACFA,IAAQ,KAASD,IAClBN,OAAOC,OAAOF,EAAQ,CAAE,CAACO,GAAMC,EAAIL,Y,IAM3C,MAAMhD,EAAU,CAAEsD,OAAQ,KAAI,QAAmBT,MACjDxB,EAASrB,EAAS,CAAEuD,SAAS,GAAO,GACnC,CAACpC,EAAaT,EAAOI,EAAQE,EAAeK,KAE/C,IAAAuB,YAAU,KACLtB,GAAcC,IACfD,EAAWkC,aACVC,MAAMC,GAEDA,EAAOC,aACZF,KAAKtB,GACNZ,EAAYa,cACXqB,MAAMG,GAAqCA,EAAKD,aAChDF,KAAKpB,GACNd,EAAYe,iBACXmB,MAAMG,GAAqCA,EAAKD,aAChDF,KAAKlB,GACNhB,EAAYiB,aACXiB,KAAKhB,GACNlB,EAAYmB,gBACXe,KAAKd,G,GAEP,CAACrB,EAAYC,KAEhB,IAAAqB,YAAU,KACRxB,GAAe,QAAWF,GAAS,GAClC,CAACA,IAEJ,MAAM2C,GAAa,IAAAC,QAAO,MACpBC,GAAW,IAAAtC,cACfuC,MAAO1D,IACLuD,EAAWI,SAASC,QACpBL,EAAWI,QAAU,IAAIE,gBACzB5D,EAAU,UAEF6D,QAAQC,WACZ/D,EAAOgE,KAAIN,MAAOpC,EAAOF,KACvB,IACE,MAAMlC,EAAaoC,EAAMpC,WAChB8B,EAAWiD,aAAa3C,EAAM4C,QAAQb,WAGzCC,EACJpE,EAEG,IAAIiF,OAAOjC,GAAc,IACvBiC,OAAO/B,GAGRQ,EAAStB,EAAM8C,IAAIxB,QACvBU,IAASxB,EAELuC,EAAY/C,EAAM8C,IAAIC,WAC1Bf,KAAUxB,EAAcE,GAEpBsC,EAAQhD,EAAMgD,QAAU1B,GAAUyB,EACtC/D,OAAQ,IAAI,IAAM,GAAMpB,GACtB,MAEEkF,EAAiC,CACrCxB,SACAyB,YACAE,OACmB,GAAjBjD,EAAMkD,UACF5B,GAAUyB,KACV3D,GAcR,GAVAQ,EACEE,EACA,CACElC,GAAI,KAAKA,EAAGwD,SAAS,MACrBwB,MAAO5C,EAAM4C,MACbI,QACAF,OAIDA,EAAGG,OACJ,MAAM,IAAIpF,EAAY,oBAGxB,MAAMsF,QAAkBX,QAAQC,WAAW,CACzC,WACE,MAAMW,EAAMpD,EAAMoD,WAAa1D,EAAW0D,IAAIxF,GAC9C,GAAW,KAARwF,EACD,MAAM,IAAItF,MAAM,sCAElB8B,EAASE,EAAK,CAAEsD,QAChB,MAAMC,QAAiBC,OACrB,QAAQF,GACR,CAAEG,OAAQtB,EAAWI,QAAQkB,SAE/B,IAAIF,EAASG,GACX,MAAM,IAAI1F,MAAM,mBAAmBuF,EAASI,UAE9C,IAAIC,EACJ,IACEA,QAAaL,EAASM,OACtB/D,EAASE,EAAK,CAAE8D,SAAU,UAAYF,I,CACtC,MAAMG,GACNC,QAAQC,MAAM,CAAEF,QAAOH,Q,CAE1B,EApBD,GAqBA,WACE,MAAM5B,QAAepC,EAAWsE,YAAYpG,GAC5CgC,EAASE,EAAK,CAAEmE,MAAOnC,EAAOC,YAC/B,EAHD,GAIA,WACE,MAAMmC,QAAYxE,EAAWyE,OAAOvG,GACpCgC,EAASE,EAAK,CAAEoE,IAAKA,EAAInC,YAC1B,EAHD,OAMOqC,OAAQP,GAAU,CAAEO,OAAQ,OACnCjB,EAAUkB,QAAQC,GACD,aAAfA,EAAIb,SAGR,GAAGI,EAAO,MAAM,IAAI/F,MAAM+F,E,CAC1B,MAAMA,GAIN,GAHKA,aAAiBhG,GACpBiG,QAAQD,MAAM,CAAEA,YAEbA,aAAiBU,cACpB,OAAO3E,EAASE,EAAK,CACnB+D,OAAO,QAAeA,I,QAQpC,CACErD,EAAaM,EAAeF,EAAYF,EACxCtB,EAAeM,EAAYE,IAsD/B,OAlDA,IAAAoB,YAAU,KACKoB,WACX,GACE1C,GAAcC,GAA4B,MAAbW,GACZ,MAAdM,GAAuC,MAAjBE,GACP,MAAfN,GAAyC,MAAlBE,EAC1B,CACA,MAAMhC,EAA4B,GAClC,GAAGa,EAAYiF,MAAK,KAAM,IACxBjF,EAAYgC,SACTkD,IACC,IAAI,KAAEC,EAAI,IAAEC,GAAQF,IACJE,EAAKD,GACnB,CAACC,EAAKD,GAAME,MAAK,CAACC,EAAGC,IAAOD,EAAIC,KAExBN,MAAMC,GAAiB,MAARA,OACtBC,EAAMC,GAAO,CAACF,EAAgBA,IAEjC/F,EAAOhB,QACLyC,MAAMC,KAAK,CAAEC,OAAQqE,EAAOC,EAAM,IACjCjC,KAAI,CAACqC,EAAGjF,KAAQ,CACf8C,MAAO+B,EAAM7E,EACboD,SAAS,MAEX,QAGD,CACL,MAAM8B,EAAQ9F,EAAS,EAAIF,OAAOsB,GAAapB,EAASA,EAClD+F,EAAQC,KAAKC,IAAIrG,EAAOE,OAAOsB,GAAa0E,GAClDtG,EAAOhB,QAEHyC,MAAMC,KAAK,CAAEC,OAAQ4E,IACpBvC,KAAI,CAACqC,EAAGjF,KAAQ,CACf8C,MAAOoC,EAAQlF,EAAM,M,OAMvBqC,EAASzD,E,GAGnB0G,EAAM,GACL,CACD7F,EAAa4C,EAAUzC,EAAYC,EACnCb,EAAOI,EAAQoB,EACfM,EAAYE,EAAeN,EAAaE,IAIxC,gCACE,gBAAC2E,EAAA,EAAM,KACL,4EACA,wBACElH,KAAK,cACLmH,QAAQ,iCAIZ,gBAAC,KAAM,MAEP,4BACE,gBAAC,KAAe,CAEZxG,QAAOC,WACPG,SAAQC,YACRC,gBAAeC,mBACfE,cAAaC,mBAGjB,gBAAC,KAAW,CAAOd,YAErB,8BACE,0BACE6G,QAAS,KACP,GAAGhG,EAAYc,OAAS,EAAG,CACzB,MAAMmF,EAAajG,EAAYmD,KAC5B+C,GAAYA,GAAkBf,MAAQe,IAEnCvB,EAAMgB,KAAKhB,OAAOsB,GACxBhG,GAAgBkG,GAAQ,IAClBA,EAAK,CAAEf,IAAKT,EAAKQ,KAAMR,EAAM,M,MAGnCnF,GAAU4G,GAAQA,EAAM,I,GAI5B,wBAAMC,UAAU,YAAU,K,MAE5B,0BACEL,QAAS,IAAMpG,GAAW0G,GAAQA,EAAM/G,KAExC,wBAAM8G,UAAU,eAAa,KAAU9G,GAEzC,0BACEyG,QAAS,IAAMpG,GAAW0G,GAAQA,EAAM/G,KAExC,wBAAM8G,UAAU,eAAa,KAAU9G,IAI9C,C","sources":["webpack://@chievemints/ui/./src/styles/home.css","webpack://@chievemints/ui/./src/lib/types.ts","webpack://@chievemints/ui/./src/styles/home.css?5444","webpack://@chievemints/ui/./src/pages/home.tsx"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".link {\\n  position: relative;\\n  z-index: 1;\\n  cursor: pointer;\\n}\\n\\nfooter {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 1rem;\\n  position: fixed;\\n  bottom: 0;\\n  left: 50%;\\n  margin-top: 3rem;\\n}\\n\\nmain {\\n  display: grid;\\n  align-items: center;\\n  justify-items: center;\\n  place-items: center;\\n}\\n\\nmain h1 {\\n    text-align: center;\\n  }\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/styles/home.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,kBAAkB;EAClB,UAAU;EACV,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,SAAS;EACT,eAAe;EACf,SAAS;EACT,SAAS;EACT,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,mBAAmB;EAAnB,qBAAmB;EAAnB,mBAAmB;AAKrB;;AAHE;IACE,kBAAkB;EACpB\",\"sourcesContent\":[\".link {\\n  position: relative;\\n  z-index: 1;\\n  cursor: pointer;\\n}\\n\\nfooter {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 1rem;\\n  position: fixed;\\n  bottom: 0;\\n  left: 50%;\\n  margin-top: 3rem;\\n}\\n\\nmain {\\n  display: grid;\\n  place-items: center;\\n\\n  & h1 {\\n    text-align: center;\\n  }\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import { ExternalProvider } from '@ethersproject/providers'\n\nexport type Maybe<T> = T | null\nexport type Values<T> = T[keyof T]\nexport type Optional<T> = T | undefined\n\n// declare global {\n//   interface Window {\n//     ethereum: ExternalProvider\n//   }\n// }\n\nexport type NetworkInfo = {\n  [chainName: string]: {\n    chainId: number;\n    name: string;\n    label: string;\n    symbol: string;\n    explorer: Maybe<string>;\n    rpc: string;\n  }\n}\n\nexport type OpenSeaAttribute = {\n  trait_type?: string\n  value?: string | number\n  display_type?: string\n}\n\nexport type Attribute = {\n  name?: string\n  value?: string | number\n  type?: string\n}\n\nexport type ERC1155Metadata = {\n  name?: string\n  description?: string\n  decimals?: number\n  attributes?: Array<Attribute>\n  properties?: { wearables?: Record<string, string> }\n  external_url?: string\n  image?: string | File\n  animation_url?: string | File\n  background_color?: string\n\n} & {\n  [key: string]: string | number\n}\n\nexport type CodedError = Error & { code: number }\n\nexport type TokenState = {\n  id?: string\n  hidable?: boolean\n  is?: Record<string, unknown>\n  gates?: Maybe<number>\n  index?: number\n  uri?: string\n  metadata?: ERC1155Metadata\n  total?: number\n  max?: number\n  error?: string\n}\n\nexport type MetaMaskError = Error & {\n  data: {\n    code: number\n    data: string\n    message: string\n  }\n}\n\nexport type NestedError = {\n  error: Error\n}\n\nexport type NamedString = {\n  name: string\n  content: string\n}\n\nexport type Fileish = (\n  File | string | NamedString\n)\n\nexport type FileListish = (\n  Fileish | Array<File | string>\n)\n\nexport type FormValues = {\n  name?: string\n  description?: string\n  homepage?: string\n  image?: Fileish\n  color?: string\n  animation?: Fileish\n  attributes?: Array<Attribute>\n  uri?: string\n  json5?: string\n  maximum?: number\n}\n\nexport type Limits = {\n  high?: number\n  low?: number\n}\n\nexport type SpanList = Array<number | Limits>\n\nexport class HiddenError extends Error {\n  constructor(message: string) {\n    super(message)\n    this.name = 'HiddenError'\n  }\n}\n\nexport type Styles = (\n  Record<string, string>\n  & ((...names: string[]) => string)\n)","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./home.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./home.css\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, {\n  useState, useEffect, useCallback, useRef,\n} from 'react'\nimport {\n  extractMessage, httpURL, toSpanList,\n} from '@/lib/helpers'\nimport {\n  HiddenError, Limits, Maybe, TokenState,\n} from '@/lib/types'\nimport {\n  Header, TokenFilterForm, TokensTable,\n} from '@/components'\nimport { useWeb3 } from '@/lib/hooks'\nimport { Helmet } from 'react-helmet'\nimport {\n  useSearchParams, useNavigate, createSearchParams,\n} from 'react-router-dom'\nimport JSON5 from 'json5'\nimport { defaults } from '@/config'\nimport '../styles/home.css'\n\nconst Home = () => {\n  const [tokens, setTokens] = useState<Array<TokenState | Error>>([])\n  const [query] = useSearchParams()\n  const [limit, setLimit] = useState(Number(query.get('limit') ?? defaults.limit))\n  const [offset, setOffset] = useState(Number(query.get('offset') ?? defaults.offset))\n  const [gatingVisible, setGatingVisible] = (\n    useState(query.get('gating') === 'true')\n  )\n  const visible = query.get('visible') ?? defaults.visible\n  const [visibleList, setVisibleList] = (\n    useState<Array<number | Limits>>(toSpanList(visible))\n  )\n  const navigate = useNavigate()\n  const { roContract, bitsLibrary } = useWeb3()\n\n  const setToken = useCallback(\n    (idx: number, info: Record<string, unknown>) => {\n      let token\n\n      setTokens((tkns: Array<TokenState>) => {\n        token = { ...tkns[idx], ...info }\n        return ([\n          ...tkns.slice(0, idx),\n          ...Array.from({ length: idx - tkns.length }, () => ({})),\n          token,\n          ...tkns.slice(idx + 1),\n        ])\n      })\n      return token\n    },\n    [setTokens],\n  )\n  const [typeCount, setTypeCount] = useState(null)\n  const [GATING_TYPE, setGATING_TYPE] = useState<Maybe<bigint>>(null)\n  const [DISABLING_TYPE, setDISABLING_TYPE] = useState<Maybe<bigint>>(null)\n  const [TYPE_WIDTH, setTYPE_WIDTH] = useState<Maybe<number>>(null)\n  const [TYPE_BOUNDARY, setTYPE_BOUNDARY] = (\n    useState<Maybe<number>>(null)\n  )\n\n  useEffect(() => {\n    const params = {}\n    if(visibleList?.length > 0) {\n      Object.assign(params, {\n        visible: visibleList.toString(),\n      })\n     } else {\n      Object.entries({ limit, offset, gating: gatingVisible }).forEach(\n        ([key, val]) => {\n          if(val !== defaults[key as keyof typeof defaults]) {\n            Object.assign(params, { [key]: val.toString() })\n          }\n        }\n      )\n    }\n\n    const options = { search: `?${createSearchParams(params)}` }\n    navigate(options, { replace: true })\n  }, [visibleList, limit, offset, gatingVisible, navigate])\n\n  useEffect(() => {\n    if(roContract && bitsLibrary) {\n      roContract.typeSupply()\n      .then((supply: {\n        toBigInt: () => bigint // call-bind?\n      }) => supply.toBigInt())\n      .then(setTypeCount)\n      bitsLibrary.GATING_TYPE()\n      .then((type: { toBigInt: () => bigint }) => type.toBigInt())\n      .then(setGATING_TYPE)\n      bitsLibrary.DISABLING_TYPE()\n      .then((type: { toBigInt: () => bigint }) => type.toBigInt())\n      .then(setDISABLING_TYPE)\n      bitsLibrary.TYPE_WIDTH()\n      .then(setTYPE_WIDTH)\n      bitsLibrary.TYPE_BOUNDARY()\n      .then(setTYPE_BOUNDARY)\n    }\n  }, [roContract, bitsLibrary])\n\n  useEffect(() => {\n    setVisibleList(toSpanList(visible))\n  }, [visible])\n\n  const controller = useRef(null)\n  const retrieve = useCallback(\n    async (tokens: Array<TokenState>) => {\n      controller.current?.abort()\n      controller.current = new AbortController()\n      setTokens([])\n      return (\n        await Promise.allSettled(\n          tokens.map(async (token, idx) => {\n            try {\n              const id: bigint = token.id ?? (\n                (await roContract.tokenByIndex(token.index)).toBigInt()\n              )\n\n              const type = (\n                id\n                & (\n                  (2n**BigInt(TYPE_WIDTH) - 1n) // TYPE_WIDTH 1s\n                  << BigInt(TYPE_BOUNDARY)\n                )\n              )\n              const gating = token.is?.gating ?? (\n                type === GATING_TYPE\n              )\n              const disabling = token.is?.disabling ?? (\n                type === (GATING_TYPE | DISABLING_TYPE)\n              )\n              const gates = token.gates ?? (gating || disabling ? (\n                Number((2n**32n - 1n) & id)\n              ) : ( null ))\n\n              const is: { [key: string]: unknown } = {\n                gating,\n                disabling,\n                hidden: (\n                  token.hidable != false\n                  && (gating || disabling)\n                  && !gatingVisible\n                ),\n              }\n\n              setToken(\n                idx,\n                {\n                  id: `0x${id.toString(16)}`,\n                  index: token.index,\n                  gates,\n                  is,\n                }\n              )\n\n              if(is.hidden) {\n                throw new HiddenError('Token is hidden.')\n              }\n\n              const responses = await Promise.allSettled([\n                (async () => {\n                  const uri = token.uri ?? await roContract.uri(id)\n                  if(uri === '') {\n                    throw new Error('No URI… Waiting for configuration…')\n                  }\n                  setToken(idx, { uri })\n                  const response = await fetch(\n                    httpURL(uri)!,\n                    { signal: controller.current.signal }\n                  )\n                  if(!response.ok) {\n                    throw new Error(`Request Status: ${response.status}`)\n                  }\n                  let body\n                  try {\n                    body = await response.text()\n                    setToken(idx, { metadata: JSON5.parse(body) })\n                  } catch(error) {\n                    console.debug({ error, body })\n                  }\n                })(),\n                (async () => {\n                  const supply = await roContract.totalSupply(id)\n                  setToken(idx, { total: supply.toBigInt() })\n                })(),\n                (async () => {\n                  const max = await roContract.getMax(id)\n                  setToken(idx, { max: max.toBigInt() })\n                })(),\n              ])\n\n              const [{ reason: error } = { reason: null }] = (\n                responses.filter((res) => (\n                  res.status === 'rejected'\n                )) as Array<{ reason: string }>\n              )\n              if(error) throw new Error(error)\n            } catch(error) {\n              if(!(error instanceof HiddenError)) {\n                console.error({ error })\n              }\n              if(!(error instanceof DOMException)) { // !aborted\n                return setToken(idx, {\n                  error: extractMessage(error)\n                })\n              }\n            }\n          })\n        )\n      )\n    },\n    [\n      GATING_TYPE, TYPE_BOUNDARY, TYPE_WIDTH, DISABLING_TYPE,\n      gatingVisible, roContract, setToken,\n    ],\n  )\n\n  useEffect(() => {\n    const load = async () => {\n      if(\n        roContract && bitsLibrary && typeCount != null\n        && TYPE_WIDTH != null && TYPE_BOUNDARY != null\n        && GATING_TYPE != null && DISABLING_TYPE != null\n      ) {\n        const tokens: Array<TokenState> = []\n        if(visibleList.some(() => true)) {\n          visibleList.forEach(\n            (elem) => {\n              let { high, low } = elem as Limits\n              const sorted = [low, high] = (\n                [low, high].sort((a, b) => (a - b))\n              )\n              if(sorted.some((elem) => elem == null)) {\n                [high, low] = [elem as number, elem as number]\n              }\n              tokens.push(...(\n                Array.from({ length: high - low + 1 })\n                .map((_, idx) => ({\n                  index: low + idx,\n                  hidable: false,\n                }))\n              ))\n            }\n          )\n        } else {\n          const start = offset < 0 ? Number(typeCount) + offset : offset\n          const count = Math.min(limit, Number(typeCount) - start)\n          tokens.push(\n            ...(\n              Array.from({ length: count })\n              .map((_, idx) => ({\n                index: start + idx + 1,\n              }))\n            )\n          )\n        }\n\n        await retrieve(tokens)\n      }\n    }\n    load()\n  }, [\n    visibleList, retrieve, roContract, bitsLibrary,\n    limit, offset, typeCount,\n    TYPE_WIDTH, TYPE_BOUNDARY, GATING_TYPE, DISABLING_TYPE,\n  ])\n\n  return (\n    <>\n      <Helmet>\n        <title>𝔐𝔢𝔱𝔞𝔊𝔞𝔪𝔢’𝔰 ’𝘾𝙝𝙞𝙚𝙫𝙚𝙢𝙞𝙣𝙩𝙨</title>\n        <meta \n          name=\"description\"\n          content=\"MetaGame’s ’Chievemint NFTs\"\n        />\n      </Helmet>\n\n      <Header/>\n\n      <main>\n        <TokenFilterForm\n          {...{\n            limit, setLimit,\n            offset, setOffset,\n            gatingVisible, setGatingVisible,\n            visibleList, setVisibleList,\n          }}\n        />\n        <TokensTable {...{ tokens }}/>\n      </main>\n      <footer>\n        <button\n          onClick={() => {\n            if(visibleList.length > 0) {\n              const potentials = visibleList.map(\n                (entry) => ((entry as Limits)?.high ?? entry) as number\n              )\n              const max = Math.max(...potentials)\n              setVisibleList((vis) => (\n                [...vis, { low: max, high: max + 10 }]\n              ))\n            } else {\n              setLimit((lim) => lim + 10)\n            }\n          }}\n        >\n          <span className=\"bigNBold\">+</span>10\n        </button>\n        <button\n          onClick={() => setOffset((off) => off + limit)}\n        >\n          <span className=\"biggerNBold\">↓</span>{limit}\n        </button>\n        <button\n          onClick={() => setOffset((off) => off - limit)}\n        >\n          <span className=\"biggerNBold\">↑</span>{limit}\n        </button>\n      </footer>\n    </>\n  )\n}\n\nexport default Home"],"names":["___CSS_LOADER_EXPORT___","push","module","id","HiddenError","Error","constructor","message","super","this","name","options","styleTagTransform","setAttributes","insert","domAPI","insertStyleElement","tokens","setTokens","useState","query","limit","setLimit","Number","get","offset","setOffset","gatingVisible","setGatingVisible","visible","visibleList","setVisibleList","navigate","roContract","bitsLibrary","setToken","useCallback","idx","info","token","tkns","slice","Array","from","length","typeCount","setTypeCount","GATING_TYPE","setGATING_TYPE","DISABLING_TYPE","setDISABLING_TYPE","TYPE_WIDTH","setTYPE_WIDTH","TYPE_BOUNDARY","setTYPE_BOUNDARY","useEffect","params","Object","assign","toString","entries","gating","forEach","key","val","search","replace","typeSupply","then","supply","toBigInt","type","controller","useRef","retrieve","async","current","abort","AbortController","Promise","allSettled","map","tokenByIndex","index","BigInt","is","disabling","gates","hidden","hidable","responses","uri","response","fetch","signal","ok","status","body","text","metadata","error","console","debug","totalSupply","total","max","getMax","reason","filter","res","DOMException","some","elem","high","low","sort","a","b","_","start","count","Math","min","load","Helmet","content","onClick","potentials","entry","vis","lim","className","off"],"sourceRoot":""}