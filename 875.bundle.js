"use strict";(self.webpackChunk_chievemints_ui=self.webpackChunk_chievemints_ui||[]).push([[875],{82875:(e,t,n)=>{n.r(t),n.d(t,{default:()=>b});var a=n(2784),l=n(64033),r=n(69204),s=n(54805),c=n(41135),i=n(96035),m=n(42840),o=n(46652),u=n(1525),E=n(79338),d=n(26106),h=n(60146),v=n(14738),w=n(18813),y=n(10289),C=n(18671);const p=({name:e})=>{const{ensProvider:t}=(0,v.$6)(),n=(0,a.useMemo)((()=>/^0x[a-z0-9]{40}$/i.test(e)),[e]),[s,c]=(0,a.useState)(n?void 0:null);return(0,a.useMemo)((()=>{n||(async()=>{const n=await(t?.resolveName(e));c(n??"Not Found")})()}),[n,t,e]),a.createElement(a.Fragment,null,a.createElement(l.xv,null,e,null!=s&&a.createElement(l.xv,{ml:2,as:"em"},"(",s,")")),null===s&&a.createElement(r.$,{size:"xs"}))},f=e=>e.split(/\s*[\s,;:/\\|]+\s*/).filter((e=>e&&""!==e)),b=()=>{let{nftId:e}=(0,y.UO)();Array.isArray(e)&&([e]=e);const[t,n]=(0,a.useState)(),[b,g]=(0,a.useState)(),[k,x]=(0,a.useState)(),[S,N]=(0,a.useState)(""),[$,F]=(0,a.useState)("whitelist"),{ensProvider:I,address:M,roContract:P,rwContract:T,connected:z,connect:A,userProvider:D}=(0,v.$6)(),[_,O]=(0,a.useState)([]),K=(0,s.pm)();(0,a.useEffect)((()=>{(async()=>{O(f(S).map(((e,t)=>a.createElement(p,{key:t,name:e}))))})()}),[I,S]);const L=(0,a.useMemo)((()=>b?.name??`#${e}`),[b,e]);(0,a.useEffect)((()=>{(async()=>{if(P&&M&&e)try{n(Number((await P.balanceOf(M,e)).toString()))}catch(e){x(e.message)}})()}),[M,P,e]),(0,a.useEffect)((()=>{(async()=>{if(P&&e)try{const t=await P.uri(e);if(t){const e=await fetch((0,h._m)(t));g(await e.json())}else g(null)}catch(e){x(e.message)}})()}),[P,e]);const W=(0,a.useCallback)((async t=>{if(t.preventDefault(),T)try{const t=await Promise.all(f(S).map((async e=>{const t=await(I?.resolveName(e));if(!t)throw new Error(`Couldn't Resolve Name: “${e}”`);return t})));switch($){case"mint":{const n=await(T?.["mint(address[],uint256,bytes)"](t,e,[]));await n.wait();break}case"whitelist":console.debug("whitelist",{addrs:t}),t.map((async t=>{await(P?.roleIndexForName("Minter")),await(T?.["mint(address,uint256,uint256,bytes)"](t,e,1,[]))}))}}catch(e){K({title:`${(0,h.kC)($)}ing Error`,description:e.message,status:"error",isClosable:!0,duration:1e4})}else K({title:"Contract Error!",description:"Token is not Connected.",status:"error",isClosable:!0,duration:1e4})}),[$,_,I,P,T,e]);return k?a.createElement(c.bZ,{status:"error"},a.createElement(c.zM,null),a.createElement(c.Cd,{mr:2},"Error: Loading NFT"),a.createElement(c.X,null,k)):a.createElement(l.W2,{maxW:"40rem"},a.createElement(C.q,null,a.createElement("title",null,"Disburse NFT #",e),a.createElement("meta",{name:"description",content:"Distribute A ’Chievemint NFT"})),a.createElement(w.dL,null),a.createElement(l.Kq,{as:"form",onSubmit:W},null===b?a.createElement(l.xv,{my:8},"Token ",L," does not exist."):M?null==t?a.createElement(l.kC,{my:8},a.createElement(r.$,null),a.createElement(l.xv,{ml:2},"Loading Balance…")):a.createElement(l.xv,{my:8},"Distribute up to ",t," “",L,"” tokens:"):a.createElement(l.xv,{my:8},"Connect your wallet to distribute “",L,"” tokens…"),a.createElement(i.mQ,{isFitted:!0,variant:"enclosed"},a.createElement(i.td,{mb:"1em"},a.createElement(i.OK,null,"CSV"),a.createElement(i.OK,null,"Parsed")),a.createElement(i.nP,null,a.createElement(i.x4,null,a.createElement(m.NI,null,a.createElement(m.lX,null,"Comma, Space, or Semicolon Separated ETH or ENS Addresses:"),a.createElement(o.g,{height:64,placeholder:"Enter space, semicolon, or comma separated eth addresses.",value:S,onChange:({target:{value:e}})=>{N(e)}}))),a.createElement(i.x4,null,a.createElement(l.GS,null,_.map(((e,t)=>a.createElement(l.HC,{key:t,justifyContent:"center"},e))))))),a.createElement(m.NI,null,a.createElement(u.Ee,{onChange:F,value:$},a.createElement(u.Y8,{value:"mint"},"Mint"),a.createElement(u.Y8,{value:"whitelist",ml:5},"Whitelist"))),a.createElement(m.NI,null,a.createElement(E.XZ,{name:"skip",value:"true"},"Skip existing holders")),a.createElement(m.NI,{textAlign:"center"},T?a.createElement(d.zx,{type:"submit",colorScheme:"green"},"Distribute"):a.createElement(d.zx,{onClick:A},"Connect"))))}}}]);